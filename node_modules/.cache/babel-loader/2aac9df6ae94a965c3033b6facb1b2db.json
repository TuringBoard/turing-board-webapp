{"ast":null,"code":"var _jsxFileName = \"/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst db = getFirestore();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loginSuccess, setLoginSuccess] = useState();\n\n  const signup = (email, password, firstName, lastName) => {\n    createUserWithEmailAndPassword(auth, email, password).then(cred => {\n      return setDoc(doc(db, 'users', cred.user.uid), {\n        firstName,\n        lastName\n      });\n    });\n  };\n\n  const login = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    loginSuccess\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthContextProvider, \"RfeST/HA+aTPRcdxz+8Zywfz+hA=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js"],"names":["React","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","setDoc","AuthContext","createContext","db","useAuth","AuthContextProvider","children","currentUser","setCurrentUser","loginSuccess","setLoginSuccess","signup","email","password","firstName","lastName","then","cred","user","uid","login","catch","error","console","log","message","unsubscribe","onAuthStateChanged","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,QAA2E,gBAA3E;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,QAA0C,oBAA1C;;AAEA,MAAMC,WAAW,gBAAGV,KAAK,CAACW,aAAN,EAApB;AACA,MAAMC,EAAE,GAAGL,YAAY,EAAvB;AAEA,OAAO,MAAMM,OAAO,GAAG,MAAM;AAAA;;AACzB,SAAOZ,UAAU,CAACS,WAAD,CAAjB;AACH,CAFM;;GAAMG,O;;AAIb,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,EAAhD;;AACA,QAAMiB,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,QAA7B,KAA0C;AACrDnB,IAAAA,8BAA8B,CAACD,IAAD,EAAOiB,KAAP,EAAcC,QAAd,CAA9B,CACKG,IADL,CACUC,IAAI,IAAI;AACV,aAAOjB,MAAM,CAACD,GAAG,CAACI,EAAD,EAAK,OAAL,EAAcc,IAAI,CAACC,IAAL,CAAUC,GAAxB,CAAJ,EAAkC;AAC3CL,QAAAA,SAD2C;AAE3CC,QAAAA;AAF2C,OAAlC,CAAb;AAIH,KANL;AAOH,GARD;;AAUA,QAAMK,KAAK,GAAG,CAACR,KAAD,EAAQC,QAAR,KAAqB;AAC/BhB,IAAAA,0BAA0B,CAACF,IAAD,EAAOiB,KAAP,EAAcC,QAAd,CAA1B,CACKQ,KADL,CACYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,KAHL;AAIH,GALD;;AAOAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiC,WAAW,GAAG/B,IAAI,CAACgC,kBAAL,CAAwBT,IAAI,IAAI;AAChDV,MAAAA,cAAc,CAACU,IAAD,CAAd;AACH,KAFmB,CAApB;AAGA,WAAOQ,WAAP;AACH,GALQ,EAKN,EALM,CAAT;AAOA,QAAME,KAAK,GAAG;AACVrB,IAAAA,WADU;AAEVI,IAAAA,MAFU;AAGVS,IAAAA,KAHU;AAIVX,IAAAA;AAJU,GAAd;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEmB,KAA7B;AAAA,cACKtB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtCM;;IAAMD,mB;;KAAAA,mB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\n\nconst AuthContext = React.createContext()\nconst db = getFirestore();\n\nexport const useAuth = () => {\n    return useContext(AuthContext)\n}\n\nexport const AuthContextProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loginSuccess, setLoginSuccess] = useState();\n    const signup = (email, password, firstName, lastName) => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(cred => {\n                return setDoc(doc(db, 'users', cred.user.uid), {\n                    firstName,\n                    lastName\n                })\n            });\n    }\n\n    const login = (email, password) => {\n        signInWithEmailAndPassword(auth, email, password)\n            .catch((error) => {\n                console.log(error.message)\n            });\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n        })\n        return unsubscribe;\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        loginSuccess\n    }\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}