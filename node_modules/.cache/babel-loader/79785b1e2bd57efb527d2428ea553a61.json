{"ast":null,"code":"var _jsxFileName = \"/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst db = getFirestore();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loginSuccess, setLoginSuccess] = useState(false);\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [uid, setUid] = useState(\"\");\n  const isLoggedIn = !!uid;\n  const history = useHistory();\n\n  const signup = (email, password, firstName, lastName) => {\n    createUserWithEmailAndPassword(auth, email, password).then(cred => {\n      return setDoc(doc(db, 'users', cred.user.uid), {\n        id: cred.user.uid,\n        firstName,\n        lastName\n      });\n    }).catch(error => {\n      setSignupSuccess(false);\n    });\n    setSignupSuccess(true);\n  };\n\n  const login = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).catch(error => {\n      setLoginSuccess(false);\n    });\n    setLoginSuccess(true);\n  };\n\n  const logout = () => {\n    signOut(auth).then(() => {\n      localStorage.removeItem('uid');\n      history.push('/');\n    }).catch(error => {\n      alert(\"An error occured: \", error);\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      user && setUid(user.uid);\n      user && localStorage.setItem('uid', user.uid);\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    isLoggedIn,\n    signup,\n    login,\n    logout,\n    loginSuccess,\n    signupSuccess,\n    uid\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthContextProvider, \"JK/5VFfdoAG7Xg6g6oo6pP92BDY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js"],"names":["React","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","setDoc","useHistory","AuthContext","createContext","db","useAuth","AuthContextProvider","children","currentUser","setCurrentUser","loginSuccess","setLoginSuccess","signupSuccess","setSignupSuccess","uid","setUid","isLoggedIn","history","signup","email","password","firstName","lastName","then","cred","user","id","catch","error","login","logout","localStorage","removeItem","push","alert","unsubscribe","onAuthStateChanged","setItem","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nimport { useHistory } from 'react-router';\nconst AuthContext = React.createContext()\nconst db = getFirestore();\n\nexport const useAuth = () => {\n    return useContext(AuthContext)\n}\n\nexport const AuthContextProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n\n    const [loginSuccess, setLoginSuccess] = useState(false);\n    const [signupSuccess, setSignupSuccess] = useState(false);\n    const [uid, setUid] = useState(\"\")\n    const isLoggedIn = !!uid;\n    const history = useHistory();\n    const signup = (email, password, firstName, lastName) => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(cred => {\n\n                return setDoc(doc(db, 'users', cred.user.uid), {\n                    id: cred.user.uid,\n                    firstName,\n                    lastName\n                })\n            }).catch(error => {\n                setSignupSuccess(false);\n            });\n        setSignupSuccess(true);\n    }\n\n    const login = (email, password) => {\n        signInWithEmailAndPassword(auth, email, password)\n            .catch((error) => {\n                setLoginSuccess(false)\n            });\n        setLoginSuccess(true);\n    }\n\n    const logout = () => {\n        signOut(auth).then(() => {\n            localStorage.removeItem('uid');\n            history.push('/');\n        }).catch(error => {\n            alert(\"An error occured: \", error)\n        });\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            user && setUid(user.uid);\n            user && localStorage.setItem('uid', user.uid);\n            setCurrentUser(user)\n        })\n        return unsubscribe;\n    }, [])\n\n    const value = {\n        currentUser,\n        isLoggedIn,\n        signup,\n        login,\n        logout,\n        loginSuccess,\n        signupSuccess,\n        uid\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}