{"ast":null,"code":"var _jsxFileName = \"/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst db = getFirestore();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n\n  const signup = (email, password, firstName, lastName) => {\n    createUserWithEmailAndPassword(auth, email, password).then(() => {\n      return addDoc(collection(db, 'users'), {\n        firstName,\n        lastName\n      });\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthContextProvider, \"weNTBXcC62DPmZO+PUtwIm8P/FM=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js"],"names":["React","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","getFirestore","collection","addDoc","AuthContext","createContext","db","useAuth","AuthContextProvider","children","currentUser","setCurrentUser","signup","email","password","firstName","lastName","then","unsubscribe","onAuthStateChanged","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,8BAAT,QAA+C,gBAA/C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAiD,oBAAjD;;AAEA,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAN,EAApB;AACA,MAAMC,EAAE,GAAGL,YAAY,EAAvB;AAEA,OAAO,MAAMM,OAAO,GAAG,MAAM;AAAA;;AACzB,SAAOX,UAAU,CAACQ,WAAD,CAAjB;AACH,CAFM;;GAAMG,O;;AAIb,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;;AACA,QAAMc,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,QAA7B,KAA0C;AACrDhB,IAAAA,8BAA8B,CAACD,IAAD,EAAOc,KAAP,EAAcC,QAAd,CAA9B,CACKG,IADL,CACU,MAAM;AACR,aAAOd,MAAM,CAACD,UAAU,CAACI,EAAD,EAAK,OAAL,CAAX,EAA0B;AACnCS,QAAAA,SADmC;AAEnCC,QAAAA;AAFmC,OAA1B,CAAb;AAIH,KANL;AAOH,GARD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,WAAW,GAAGnB,IAAI,CAACoB,kBAAL,CAAwBC,IAAI,IAAI;AAChDT,MAAAA,cAAc,CAACS,IAAD,CAAd;AACH,KAFmB,CAApB;AAGA,WAAOF,WAAP;AACH,GALQ,EAKN,EALM,CAAT;AAOA,QAAMG,KAAK,GAAG;AACVX,IAAAA,WADU;AAEVE,IAAAA;AAFU,GAAd;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAES,KAA7B;AAAA,cACKZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BM;;IAAMD,mB;;KAAAA,mB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\n\nconst AuthContext = React.createContext()\nconst db = getFirestore();\n\nexport const useAuth = () => {\n    return useContext(AuthContext)\n}\n\nexport const AuthContextProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const signup = (email, password, firstName, lastName) => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(() => {\n                return addDoc(collection(db, 'users'), {\n                    firstName,\n                    lastName\n                })\n            });\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n        })\n        return unsubscribe;\n    }, [])\n\n    const value = {\n        currentUser,\n        signup\n    }\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}