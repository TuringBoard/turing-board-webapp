{"ast":null,"code":"var _jsxFileName = \"/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst db = getFirestore();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loginSuccess, setLoginSuccess] = useState(false);\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [uid, setUid] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const signup = (email, password, firstName, lastName) => {\n    createUserWithEmailAndPassword(auth, email, password).then(cred => {\n      return setDoc(doc(db, 'users', cred.user.uid), {\n        id: cred.user.uid,\n        firstName,\n        lastName\n      });\n    }).catch(error => {\n      setSignupSuccess(false);\n    });\n    setSignupSuccess(true);\n  };\n\n  const login = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).catch(error => {\n      setLoginSuccess(false);\n    });\n    setLoginSuccess(true);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      user && setUid(user.uid);\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    if (loginSuccess || signupSuccess) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, [loginSuccess, signupSuccess]);\n  const value = {\n    currentUser,\n    isLoggedIn,\n    signup,\n    login,\n    loginSuccess,\n    signupSuccess,\n    uid\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthContextProvider, \"E+Lj5HuOqYhG362B/+kYOMgMzak=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js"],"names":["React","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","setDoc","AuthContext","createContext","db","useAuth","AuthContextProvider","children","currentUser","setCurrentUser","loginSuccess","setLoginSuccess","signupSuccess","setSignupSuccess","uid","setUid","isLoggedIn","setIsLoggedIn","signup","email","password","firstName","lastName","then","cred","user","id","catch","error","login","unsubscribe","onAuthStateChanged","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\n\nconst AuthContext = React.createContext()\nconst db = getFirestore();\n\nexport const useAuth = () => {\n    return useContext(AuthContext)\n}\n\nexport const AuthContextProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loginSuccess, setLoginSuccess] = useState(false);\n    const [signupSuccess, setSignupSuccess] = useState(false);\n    const [uid, setUid] = useState(\"\")\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const signup = (email, password, firstName, lastName) => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(cred => {\n                return setDoc(doc(db, 'users', cred.user.uid), {\n                    id: cred.user.uid,\n                    firstName,\n                    lastName\n                })\n            }).catch(error => {\n                setSignupSuccess(false);\n            });\n        setSignupSuccess(true);\n    }\n\n    const login = (email, password) => {\n        signInWithEmailAndPassword(auth, email, password)\n            .catch((error) => {\n                setLoginSuccess(false)\n            });\n        setLoginSuccess(true);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            user && setUid(user.uid);\n            setCurrentUser(user)\n        })\n        return unsubscribe;\n    }, [])\n\n    useEffect(() => {\n        if (loginSuccess || signupSuccess) {\n            setIsLoggedIn(true);\n        }\n        else {\n            setIsLoggedIn(false)\n        }\n    }, [loginSuccess, signupSuccess]);\n\n    const value = {\n        currentUser,\n        isLoggedIn,\n        signup,\n        login,\n        loginSuccess,\n        signupSuccess,\n        uid\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}