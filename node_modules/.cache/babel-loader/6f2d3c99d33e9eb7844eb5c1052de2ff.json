{"ast":null,"code":"var _jsxFileName = \"/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, getAuth } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nimport { useHistory } from 'react-router';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst db = getFirestore();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const history = useHistory();\n  const [loginSuccess, setLoginSuccess] = useState(false);\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [uid, setUid] = useState(\"\");\n  const isLoggedIn = !!uid;\n\n  const signup = (email, password, firstName, lastName) => {\n    createUserWithEmailAndPassword(auth, email, password).then(cred => {\n      return setDoc(doc(db, 'users', cred.user.uid), {\n        id: cred.user.uid,\n        firstName,\n        lastName\n      });\n    }).catch(error => {\n      setSignupSuccess(false);\n    });\n    setSignupSuccess(true);\n  };\n\n  const login = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).catch(error => {\n      setLoginSuccess(false);\n    });\n    setLoginSuccess(true);\n  };\n\n  const logout = () => {\n    const myAuth = getAuth();\n    signOut(myAuth).then(() => {\n      localStorage.removeItem('uid');\n      localStorage.setItem('test', 'here');\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      user && setUid(user.uid);\n      user && localStorage.setItem('uid', user.uid);\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    isLoggedIn,\n    signup,\n    login,\n    logout,\n    loginSuccess,\n    signupSuccess,\n    uid\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthContextProvider, \"btQIwALjggrnMmUjXnHR5kW1guU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/sahajamatya/Desktop/Turing Board/turing-board-webapp/src/store/auth-context.js"],"names":["React","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getAuth","getFirestore","doc","setDoc","useHistory","Redirect","AuthContext","createContext","db","useAuth","AuthContextProvider","children","currentUser","setCurrentUser","history","loginSuccess","setLoginSuccess","signupSuccess","setSignupSuccess","uid","setUid","isLoggedIn","signup","email","password","firstName","lastName","then","cred","user","id","catch","error","login","logout","myAuth","localStorage","removeItem","setItem","unsubscribe","onAuthStateChanged","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, getAuth } from '@firebase/auth';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nimport { useHistory } from 'react-router';\nimport { Redirect } from 'react-router';\n\nconst AuthContext = React.createContext()\nconst db = getFirestore();\n\n\nexport const useAuth = () => {\n    return useContext(AuthContext)\n}\n\nexport const AuthContextProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const history = useHistory();\n    const [loginSuccess, setLoginSuccess] = useState(false);\n    const [signupSuccess, setSignupSuccess] = useState(false);\n    const [uid, setUid] = useState(\"\")\n    const isLoggedIn = !!uid;\n    const signup = (email, password, firstName, lastName) => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(cred => {\n\n                return setDoc(doc(db, 'users', cred.user.uid), {\n                    id: cred.user.uid,\n                    firstName,\n                    lastName\n                })\n            }).catch(error => {\n                setSignupSuccess(false);\n            });\n        setSignupSuccess(true);\n    }\n\n    const login = (email, password) => {\n        signInWithEmailAndPassword(auth, email, password)\n            .catch((error) => {\n                setLoginSuccess(false)\n            });\n        setLoginSuccess(true);\n    }\n\n    const logout = () => {\n        const myAuth = getAuth();\n        signOut(myAuth).then(() => {\n            localStorage.removeItem('uid');\n            localStorage.setItem('test', 'here')\n            return <Redirect to=\"/\" />\n        });\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            user && setUid(user.uid);\n            user && localStorage.setItem('uid', user.uid);\n            setCurrentUser(user)\n        })\n        return unsubscribe;\n    }, [])\n\n    const value = {\n        currentUser,\n        isLoggedIn,\n        signup,\n        login,\n        logout,\n        loginSuccess,\n        signupSuccess,\n        uid\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}